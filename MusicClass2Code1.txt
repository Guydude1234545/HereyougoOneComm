campaignTrail_temp.global_parameter_json = [
    {
        "model": "campaign_trail.global_parameter",
        "pk": 1,
        "fields": {
            "vote_variable": 1.125,
            "max_swing": 0.12,
            "start_point": 0.94,
            "candidate_issue_weight": 10,
            "running_mate_issue_weight": 3,
            "issue_stance_1_max": -0.71,
            "issue_stance_2_max": -0.3,
            "issue_stance_3_max": -0.125,
            "issue_stance_4_max": 0.125,
            "issue_stance_5_max": 0.3,
            "issue_stance_6_max": 0.71,
            "global_variance": 0.01,
            "state_variance": 0.005,
            "question_count": 12,
            "default_map_color_hex": "#C9C9C9",
            "no_state_map_color_hex": "#999999"
        }
    }
]

campaignTrail_temp.election_json = [
    {
        "model": "campaign_trail.election",
        "pk": 20,
        "fields": {
            "year": 2016,
            "display_year": "2025 r/thespinroom Class 2 Election",
            "summary": "<b> THIS MOD IS MOST ENJOYABLE AND REALISTIC ON HARD-IMPOSSIBLE DIFFICULTY </b>\n\n<p> <b> After a landslide victory in the Class 1 Election, the Class 2 seat remains hotly contested. </b> <p>\n\n<p> As Incumbent Moderator AlternateHistoryIG is berated, he eventually is removed and banned for attemping to rig the election. This leads to the two frontrunners, SofshellTurtleofDoom and OneCommunity going head to head. </p>\n\n<p> With this development, this race will be closer than ever. Will you be able to win? </p>\n\n\n\n\n\n",
            "image_url": "https://i.imgur.com/1af4QTc.gif",
            "winning_electoral_vote_number": 270,
            "advisor_url": "https://i.imgur.com/1af4QTc.gif",
            "recommended_reading": "<ul>\n<li><a href=https://www.chicagotribune.com/opinion/editorials/ct-edit-chicago-tribune-biden-endorsement-20200925-lnyxsb5qvrftnjjmj3rnzj33jy-story.html>Our Case For Joe Biden</a></li>\n<li><a href=https://nationalinterest.org/feature/case-trump-166808>The Case For Trump</a></li>\n<li><a href=https://www.npr.org/2020/11/18/935730100/how-biden-won-ramping-up-the-base-and-expanding-margins-in-the-suburbs>How Biden Won: Ramping Up The Base And Expanding Margins In The Suburbs</a></li>\n<li><a href=https://www.prospectmagazine.co.uk/politics/donald-trump-joe-biden-us-election-almost-win-votes-concede>Why Did Trump Almost Win?</a></li>\n<li><a href=https://www.hoover.org/research/no-evidence-voter-fraud-guide-statistical-claims-about-2020-election>No Evidence For Voter Fraud: A Guide To Statistical Claims About The 2020 Election</a></li>\n</ul>",
            "has_visits": 1,
            "no_electoral_majority_image": "../static/images/2012-no-majority.jpg"
        }
    }
]

campaignTrail_temp.temp_election_list = [
    {
        "id": 20,
        "year": 2016,
        "is_premium": 0,
        "display_year": "2025 r/thespinroom Class 2 Election"
    }
]

campaignTrail_temp.credits = "OneComm with ALOT of help from ThePearPerson"

campaignTrail_temp.candidate_json = [
    {
        "model": "campaign_trail.candidate",
        "pk": 300,
        "fields": {
            "first_name": "",
            "last_name": "One-Community-3753",
            "election": 20,
            "party": "Independent",
            "state": "Indiana",
            "priority": 1,
            "description": "<p>One-Community-3753 is a newcomer to the TSR mod scene, but is making some big waves. With the right campaign strategies, this election will be very winnable for him.</p>",
            "color_hex": "#223f96",
            "secondary_color_hex": null,
            "is_active": 1,
            "image_url": "https://upload.wikimedia.org/wikipedia/commons/c/c5/Al_Gore%2C_Vice_President_of_the_United_States%2C_official_portrait_1994.jpg",
            "electoral_victory_message": "placeholder",
            "electoral_loss_message": "placeholder",
            "no_electoral_majority_message": "placeholder",
            "description_as_running_mate": null,
            "candidate_score": 1,
            "running_mate": false
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 302,
        "fields": {
            "first_name": "",
            "last_name": "For Class 2!",
            "election": 20,
            "party": "Independent",
            "state": "Indiana",
            "priority": 1,
            "description": "<p>Put description here</p>",
            "color_hex": "#274191",
            "secondary_color_hex": null,
            "is_active": 0,
            "image_url": "https://i.imgur.com/IAf6wZL.png",
            "electoral_victory_message": "This guy wins!",
            "electoral_loss_message": "This guy loses!",
            "no_electoral_majority_message": "We all win?",
            "description_as_running_mate": "",
            "candidate_score": 1,
            "running_mate": true
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 301,
        "fields": {
            "first_name": "",
            "last_name": " SofshellTurtleofDoom",
            "election": 20,
            "party": "SPA",
            "state": "",
            "priority": 1,
            "description": "<p>Put description here</p>",
            "color_hex": "#38a211",
            "secondary_color_hex": null,
            "is_active": 0,
            "image_url": "https://www.jetsimon.com/public/candidateexample.png",
            "electoral_victory_message": "This guy wins!",
            "electoral_loss_message": "This guy loses!",
            "no_electoral_majority_message": "We all win?",
            "description_as_running_mate": null,
            "candidate_score": 1,
            "running_mate": false
        }
    }
]

campaignTrail_temp.running_mate_json = [
    {
        "model": "campaign_trail.running_mate",
        "pk": 138539,
        "fields": {
            "candidate": 300,
            "running_mate": 302
        }
    }
]

campaignTrail_temp.opponents_default_json = [
    {
        "election": 20,
        "candidates": [
            300,
            301
        ]
    }
]

campaignTrail_temp.opponents_weighted_json = [
    {
        "election": 20,
        "candidates": [
            300,
            301
        ]
    }
]

jet_data = {
    "headerColor": "#0e4da0",
    "windowColor": "#0e4da0",
    "containerColor": "#ffffff",
    "innerWindowColor": "#3bb918",
    "bannerImageUrl": "https://i.imgur.com/2lyZOaP.png",
    "backgroundImageUrl": "https://i.imgur.com/TH42Nw5.png",
    "endingTextColor": "#ffffff",
    "customQuote": "\"As a floridian, its great to see another klansman.\" - Teammomofan",
    "gameTitle": "r/thespinroom"
}

campaignTrail_temp.credits = "<button onclick='credits()'>One-Community-3753</button>"

credits = function() {
  credits = [ "This mod was written and (mostly) coded by One-Community-3753 using Jet's Code 1 and 2 Tools", "Music Player: Stolen from DecstarG", "Credits Function: Made by DecstarG in 2000N; Borrowed from Thatchmaster's American Carnage", "A lot of help: From ThePearPerson"]
  text = "CREDITS:\n\n"
  for (i in credits) {
      text += credits[i] + "\n"
  }
  alert(text)
}

//#startcode


corrr = '\n              <h2>r/thespinroom</h2><font id="wittyquote" size="4" color="white"><em>"As a floridian, its great to see another klansman." - Teammomofan</em></font>\n            ';


nct_stuff.themes[nct_stuff.selectedTheme].coloring_title = "#0e4da0";

nct_stuff.themes[nct_stuff.selectedTheme].coloring_window = "#0e4da0";

document.getElementsByClassName("game_header")[0].style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_title;

$("#game_window")[0].style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_window;

$(".container")[0].style.backgroundColor = "#ffffff";

document.getElementById("header").src = "https://i.imgur.com/2lyZOaP.png";

document.body.background = "https://i.imgur.com/TH42Nw5.png";

document.head.innerHTML += "<style>#results_container {color:#ffffff;} .inner_window_w_desc {background-color:#3bb918!important;}</style>";

// Initialise custom music

$("#music_player")[0].children[0].style.display="none"
$("#music_player")[0].children[1].style.display="none"

document.getElementById("modLoadReveal").style.display="none"
document.getElementById("modloaddiv").style.display="none"

musicBox = document.getElementById("music_player")
musicBox.style.display=""

var trackSel;
e = campaignTrail_temp
e.selectedSoundtrack = 0

toTime = (seconds) => {
  var date = new Date(null);
  date.setSeconds(seconds);
  return date.toISOString().substr(11, 8);
}

generateTime = () => {
    // Get the audio element
    var audio = document.getElementById("campaigntrailmusic");

    timeTracker = document.createElement("div");
    timeTracker.style = `
      text-align:left;
      border-style:solid;
      border-width:3px;
      height:150px;
      width:200px;
      background-color:#999999;
      float:right;
      padding: 10px;
    `
    $("#trackSelParent")[0].prepend(timeTracker);
    $("#trackSelParent")[0].prepend(document.createElement("br"));

    // Create a new element to display the current position of the audio
    var positionDisplay = document.createElement("gg");
    positionDisplay.id = "position-display";

    // Create a new slider element to change the time
    var timeSlider = document.createElement("input");
    timeSlider.type = "range";
    timeSlider.min = 0;
    timeSlider.max = 1;
    timeSlider.step = 0.001;
    timeSlider.value = 0;
    timeSlider.style.width = "200px";
    timeSlider.id = "time-slider";

    var pausePlay = document.createElement("button");
    pausePlay.id = "position-display";
    pausePlay.innerHTML = "<b>Pause</b>"
    pausePlay.style.width = "100%";


    pausePlay.addEventListener("click", event => {
      event.preventDefault();
      updatePositionDisplay();
      let audio = document.getElementById("campaigntrailmusic");
      if (audio.paused) {
        audio.play();
        event.target.innerHTML = "<b>Pause</b>";
        return;
      }
      audio.pause();
      event.target.innerHTML = "<b>Play</b>";
      return;
    })

    var volumeLabel = document.createElement("gg");
    volumeLabel.id = "volume-label";
    volumeLabel.innerHTML = "<br><b>Volume: </b>"

    var volumeSlider = document.createElement("input");
    volumeSlider.type = "range";
    volumeSlider.min = 0;
    volumeSlider.max = 1;
    volumeSlider.step = 0.001;
    volumeSlider.value = 0;
    volumeSlider.style.width = "200px";
    volumeSlider.id = "volume-slider";

    volumeSlider.value = audio.volume;

    timeTracker.appendChild(pausePlay);
    timeTracker.appendChild(document.createElement("br"));
    timeTracker.appendChild(document.createElement("br"));
    timeTracker.appendChild(positionDisplay);
    timeTracker.appendChild(timeSlider);
    timeTracker.appendChild(volumeLabel);
    timeTracker.appendChild(volumeSlider);

    updatePositionDisplay();

    //for (let i = 0; i < 10; i++)
    //timeTracker.append(document.createElement("br"));


    // Function to update the position display
    function updatePositionDisplay() {
      positionDisplay.innerHTML = "<b>Time:</b> " + toTime(audio.currentTime) + "<br>";
      timeSlider.value = audio.duration ? audio.currentTime / audio.duration : 0;
    }

    // Function to change the time of the audio
    function changeTime() {
      positionDisplay.innerHTML = "<b>Time:</b> " + toTime(audio.currentTime) + "<br>";
      audio.currentTime = timeSlider.value * audio.duration;
    }

    updateVolume = event => {
      audio.volume = event.target.value;
    }
    
    // Update the position display and slider every second
    setInterval(updatePositionDisplay, 1000);

    // Listen for changes to the time slider and change the time of the audio
    timeSlider.addEventListener("input", changeTime);
    volumeSlider.addEventListener("input", updateVolume)
}

function newMusicPlayer() {
  trackSel = document.createElement("div");
  trackSel.id = "trackSelParent"
  let z = `<br><br><br><br><br><br><br><br><br><br><div id='trackSel' style="text-align:left;border-style:solid;border-width:3px;overflow-y: scroll;overflow-x: hidden;height:200px; width:400px;background-color:#8F669A;float:right;">`
  z += `<b><select id='selectSoundtrack'><option value='`+soundtracks[e.selectedSoundtrack].name+`'>`+soundtracks[e.selectedSoundtrack].name+"</option>"
  for (i in soundtracks) {
    if (soundtracks[e.selectedSoundtrack] != soundtracks[i]) {
      z += `<option value='`+soundtracks[i].name+`'>`+soundtracks[i].name+`</option>`
    }
  }
  z += `</select></b><br><br>`
  // <label><input type="radio" name="option" value="option1">Option 1</label><br>
  for (i in soundtracks[e.selectedSoundtrack].tracklist) {
    let a = soundtracks[e.selectedSoundtrack].tracklist[i]
    let b = `<label><input class="trackSelector" type="radio" name="trackSelector" value="`+i+`">`+a.name+`</label><br>`
    z += b
  }
  z += "</div><br><br>"
  trackSel.innerHTML = z

  // select correct song

  musicBox.appendChild(trackSel);
  Array.from(document.getElementById("trackSel").children).filter(f=>{
    return f.tagName == "LABEL"
  }).map(f=>f.children[0])[0].checked = true

  // set soundtrack changer

  soundtrackSelector = document.getElementById("selectSoundtrack")
  soundtrackSelector.onchange = function() {
    for (i in soundtracks) {
      if (soundtracks[i].name == soundtrackSelector.value) {
        e.selectedSoundtrack = i
        break
      }
    }
    document.getElementById("trackSelParent").remove()
    newMusicPlayer()
  }

  var matches = document.querySelectorAll('.trackSelector');

  for (match in matches) {
    matches[match].onchange = function() {
      audio = $("#campaigntrailmusic")[0];
      audio.src = soundtracks[e.selectedSoundtrack].tracklist[this.value].url
      audio.currentTime = 0
    }
  }

  musicBox.children[2].loop = false
  musicBox.children[2].src = soundtracks[e.selectedSoundtrack].tracklist[0].url

  musicBox.children[2].onended = function() {
    console.log("next track")
    let selected = Number(document.querySelector('input[name="trackSelector"]:checked').value);
    let newSel = clamp(selected+1, soundtracks[e.selectedSoundtrack].tracklist.length-1, 0)
    let buttons = Array.from(document.getElementById("trackSel").children).filter(f=>{
      return f.tagName == "LABEL"
    }).map(f=>f.children[0])
    //let selectedIndex = buttons.map(f=>f.children[0]).map(f=>f.checked)
    buttons[newSel].click()
  }

  for (w = 0; w < 7; w++) {
    document.getElementById("trackSelParent").appendChild(document.createElement("br"))
  }
  
  generateTime();
}

clamp = function(a, max, min, overflow=true) {
  if (overflow) {
    return a > max ? min : a < min ? max : a;
  }
  return a > max ? max : a < min ? min : a;
}

// Track list

var soundtracks = {
  0: {
    name: "One-Comm's Rally Playlist",
    tracklist: [
      {
        "name": "Yesterday's Songs - Neil Diamond",
        "url": "https://audio.jukehost.co.uk/ErjKfatvj7t5ZNdnJ5DuGH0EpIiSo4AT"
      },
      {
        "name": "Give Judy My Notice - Ben Folds",
        "url": "https://audio.jukehost.co.uk/0ivehOry2GupXGR7oHIQPff4RloTpepp"
      },
      {
        "name": "Just Dance - Lady Gaga",
        "url": "https://audio.jukehost.co.uk/Mj5usHAkr5brfCDgnPkou0Icz2dP9uNi"
      },             
    ]
  }
}

// Set up new music player

newMusicPlayer()

RecReading=true

//#endcode
